<Window x:Class="GraphicalPlotter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GraphicalPlotter"
        mc:Ignorable="d"
        Title="GraphicalPlotter" 
        MinHeight="600" MinWidth="900"   Height="{Binding Path=PixelHeightApp, Mode=TwoWay}" Width="{Binding Path=PixelWidhtApp, Mode=TwoWay}" Name="PlotterWindow">
    <Window.DataContext>
        <local:MainViewModel />
    </Window.DataContext>

    <Window.Resources>
        <local:CanvasPixelToPointCollectionConverter x:Key="CanvasPixelToPointConverter"></local:CanvasPixelToPointCollectionConverter>
        <local:ColorToSolidBrushConverter x:Key="ColorToSolidBrushConverter"></local:ColorToSolidBrushConverter>
    </Window.Resources>

    <TabControl>
        <TabItem Header="Graph">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="240"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>

                    <RowDefinition ></RowDefinition>
                    <RowDefinition Height="150"></RowDefinition>
                </Grid.RowDefinitions>

                
                <!-- really dumb fix to fix up the canvas, now functions that were drawn outside of the canvas a bit are covered up is clipToBounds-->

                <Canvas Grid.Row="0" Grid.Column="0"  Height="{Binding PixelHeightCanvas}" Width="{Binding PixelWidhtCanvas}" x:Name="PlotterCanvas" ClipToBounds="True" >


                    <!--the rectangle to show the zoom selection-->
                    <Rectangle x:Name="ZoomSelectionRectangle" Fill="#220000FF" Stroke="Blue" StrokeThickness="1" Opacity="0.3" Visibility="Hidden" />
                    <!--if i dont add a rectangle in the background the click events are only registered on the drawn lines-->
                    <Rectangle Fill="Transparent" Width="{Binding ActualWidth, ElementName=PlotterCanvas}" Height="{Binding ActualHeight, ElementName=PlotterCanvas}" MouseDown="Canvas_ZoomStart"  MouseUp="Canvas_ZoomEnd" MouseMove="Canvas_MouseMove"/>
                    <!-- your other elements -->
                    <!--Draw ItemControl for Functions-->
                    <ItemsControl ItemsSource="{Binding Path=DrawInformationForFunctions}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas>
                                </Canvas>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>

                                <Polyline Points="{Binding Path=CanvasPixels,Converter={StaticResource CanvasPixelToPointConverter}}" Stroke="{Binding FunctionColor, Converter={StaticResource ColorToSolidBrushConverter}}" StrokeThickness="2" IsHitTestVisible="False">
                                </Polyline>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!--Draw information for the Grid-->

                    <ItemsControl ItemsSource="{Binding Path=DrawInformationForGridLines}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas>
                                </Canvas>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>

                                <Polyline Points="{Binding Path=CanvasPixels,Converter={StaticResource CanvasPixelToPointConverter}}" Stroke="{Binding FunctionColor, Converter={StaticResource ColorToSolidBrushConverter}}" IsHitTestVisible="False">
                                </Polyline>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                    <!--Draw information for the axis-->

                    <ItemsControl ItemsSource="{Binding Path=DrawInformationForAxis}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Canvas>
                                </Canvas>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>

                                <Polyline Points="{Binding Path=CanvasPixels,Converter={StaticResource CanvasPixelToPointConverter}}" Stroke="{Binding FunctionColor, Converter={StaticResource ColorToSolidBrushConverter}}" StrokeThickness="3" IsHitTestVisible="False">
                                </Polyline>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>


                </Canvas>
                
                <!--All the textboxes for the axis and grid information-->
                <Grid Grid.Row="1" Grid.Column="0" MaxHeight="150" MinHeight="150" Background="LightGray" Grid.ColumnSpan="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="130" MaxWidth="130" />
                        <ColumnDefinition MinWidth="25" MaxWidth="25" />
                        <ColumnDefinition MinWidth="60" MaxWidth="80" />
                        <ColumnDefinition MinWidth="60" MaxWidth="60" />
                        <ColumnDefinition MinWidth="60" MaxWidth="60" />
                        <ColumnDefinition MinWidth="60" MaxWidth="60" />
                        <ColumnDefinition MinWidth="80" MaxWidth="50" />
                        <ColumnDefinition MinWidth="50" MaxWidth="50" />
                        <ColumnDefinition MinWidth="70" MaxWidth="70" />
                        <ColumnDefinition MinWidth="20" MaxWidth="20" />

                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition MinHeight="27" MaxHeight="27" />
                        <RowDefinition MinHeight="10" MaxHeight="10" />
                        <RowDefinition  MinHeight="27" MaxHeight="27" />
                        <RowDefinition MinHeight="15" MaxHeight="15" />
                        <RowDefinition  MinHeight="27" MaxHeight="27" />
                        <RowDefinition MinHeight="10" MaxHeight="10" />
                        <RowDefinition  MinHeight="27" MaxHeight="27" />
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>

                    <!--X -AXIS INFORMATION-->
                    <TextBlock Text="X-Axis Information" Grid.Row="0" Grid.Column="0"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15" ></TextBlock>

                    <TextBlock Text="min Value:" Grid.Row="0" Grid.Column="2"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <TextBox Grid.Row="0" Grid.Column="3"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding Path=TextBoxXAxisMin}" MinWidth="50" MinHeight="15" MaxHeight="15"></TextBox>

                    <TextBlock Text="max Value:" Grid.Row="0" Grid.Column="4"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <TextBox Grid.Row="0" Grid.Column="5"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding Path=TextBoxXAxisMax}" MinWidth="50" MinHeight="15" MaxHeight="15"></TextBox>

                    <TextBlock Text="select Color:" Grid.Row="0" Grid.Column="6"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <Button Grid.Row="0" Grid.Column="7"  HorizontalAlignment="Center" VerticalAlignment="Bottom"  MinWidth="50" MinHeight="15" MaxHeight="15" 
                            Background="{Binding ColorPickerXAxisColor, Converter={StaticResource ColorToSolidBrushConverter}}" Command="{Binding OpenColorPicker}" CommandParameter="ColorPickerXAxisColor"></Button>

                    <!--needs binding to view model ALSO waiting for forum post on colorpicker lib-->
                    <TextBlock Text="Visbibility:" Grid.Row="0" Grid.Column="8"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <CheckBox Grid.Row="0" Grid.Column="9"  HorizontalAlignment="Center" VerticalAlignment="Bottom" IsChecked="{Binding Path=CheckBoxXAxisVisibility}"></CheckBox>

                    <TextBlock Grid.Column="0" Grid.Row="2"  Text="X-Axis Grid Information"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" ></TextBlock>

                    <TextBlock Text="Intervall:" Grid.Row="2" Grid.Column="4"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <TextBox Grid.Row="2" Grid.Column="5"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding Path=TextBoxXAxisGridIntervall}" MinWidth="50" MinHeight="15" MaxHeight="15"></TextBox>

                    <TextBlock Text="select Color:" Grid.Row="2" Grid.Column="6"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <!--Still needs binding to right command and color-->
                    <Button Grid.Row="2" Grid.Column="7"  HorizontalAlignment="Center" VerticalAlignment="Bottom"  MinWidth="50" MinHeight="15" MaxHeight="15" 
                            Background="{Binding ColorPickerXAxisGridColor, Converter={StaticResource ColorToSolidBrushConverter}}" Command="{Binding OpenColorPicker}" CommandParameter="ColorPickerXAxisGridColor"></Button>
                    <!--needs binding to view model ALSO waiting for forum post on colorpicker lib-->

                    <TextBlock Text="Visbibility:" Grid.Row="2" Grid.Column="8"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <CheckBox Grid.Row="2" Grid.Column="9"  HorizontalAlignment="Center" VerticalAlignment="Bottom" IsChecked="{Binding Path=CheckBoxXAxisGridVisibility}"></CheckBox>
                    <!--needs binding to view model -->

                    <!--Y-AXIS INFORMATION-->
                    <TextBlock Text="Y-Axis Information" Grid.Row="4" Grid.Column="0"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15" ></TextBlock>

                    <TextBlock Text="min Value:" Grid.Row="4" Grid.Column="2"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <TextBox Grid.Row="4" Grid.Column="3"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding Path=TextBoxYAxisMin}" MinWidth="50" MinHeight="15" MaxHeight="15"></TextBox>

                    <TextBlock Text="max Value:" Grid.Row="4" Grid.Column="4"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <TextBox Grid.Row="4" Grid.Column="5"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding Path=TextBoxYAxisMax}" MinWidth="50" MinHeight="15" MaxHeight="15"></TextBox>

                    <TextBlock Text="select Color:" Grid.Row="4" Grid.Column="6"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>

                    <Button Grid.Row="4" Grid.Column="7"  HorizontalAlignment="Center" VerticalAlignment="Bottom"  MinWidth="50" MinHeight="15" MaxHeight="15" 
                            Background="{Binding ColorPickerYAxisColor, Converter={StaticResource ColorToSolidBrushConverter}}" Command="{Binding OpenColorPicker}" CommandParameter="ColorPickerYAxisColor"></Button>
                    <!--needs binding to view model ALSO waiting for forum post on colorpicker lib-->

                    <TextBlock Text="Visbibility:" Grid.Row="4" Grid.Column="8"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <CheckBox Grid.Row="4" Grid.Column="9"  HorizontalAlignment="Center" VerticalAlignment="Bottom" IsChecked="{Binding Path=CheckBoxYAxisVisibility}"></CheckBox>

                    <TextBlock Grid.Column="0" Grid.Row="6"  Text="X-Axis Grid Information"  HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" ></TextBlock>

                    <TextBlock Text="Intervall:" Grid.Row="6" Grid.Column="4"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <TextBox Grid.Row="6" Grid.Column="5"  HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding Path=TextBoxYAxisGridIntervall}" MinWidth="50" MinHeight="15" MaxHeight="15"></TextBox>

                    <TextBlock Text="select Color:" Grid.Row="6" Grid.Column="6"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>

                    <!--Still needs binding to right command and color-->
                    <Button Grid.Row="6" Grid.Column="7"  HorizontalAlignment="Center" VerticalAlignment="Bottom"  MinWidth="50" MinHeight="15" MaxHeight="15" 
                            Background="{Binding ColorPickerYAxisGridColor, Converter={StaticResource ColorToSolidBrushConverter}}" Command="{Binding OpenColorPicker}" CommandParameter="ColorPickerYAxisGridColor"></Button>
                    <!--needs binding to view model ALSO waiting for forum post on colorpicker lib-->

                    <TextBlock Text="Visbibility:" Grid.Row="6" Grid.Column="8"  HorizontalAlignment="Center" VerticalAlignment="Bottom"></TextBlock>
                    <CheckBox Grid.Row="6" Grid.Column="9"  HorizontalAlignment="Center" VerticalAlignment="Bottom" IsChecked="{Binding Path=CheckBoxYAxisGridVisibility}"></CheckBox>
                    <!--needs binding to view model -->
                </Grid>
                <!--Sidebar for function adding and display-->
                <Grid Grid.Row="0" Grid.Column="2" Grid.RowSpan="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"></RowDefinition >
                        <RowDefinition Height="30"></RowDefinition>
                        <RowDefinition Height="30"></RowDefinition>
                        <RowDefinition Height="20"></RowDefinition>
                        <RowDefinition Height="100"></RowDefinition>
                        <RowDefinition MinHeight="315"  Height="315"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition  MinWidth="250" MaxWidth="250"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TextBlock  Grid.Row="0" Text="Input new Function" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" Background="Ivory" Padding="15"></TextBlock>


                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="190"/>
                            <ColumnDefinition Width="30"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Row="0" Grid.Column="0" Text="{Binding Path=TextBoxUserInputFunction}" TextAlignment="Center"  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="12"   Width="185" Height="20" ToolTipService.ShowOnDisabled="True" ToolTip="{Binding Path=TextBoxUserInputFunctionToolTip}"></TextBox>
                        <Button Grid.Row="0" Grid.Column="1" Content="Add" Command="{Binding Path=AddFunctionCommand}"  VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="12"   Width="30" Height="20" ToolTipService.ShowOnDisabled="True" ToolTip="{Binding Path=TextBoxUserInputFunctionToolTip}"></Button>
                    </Grid>


                    <TextBlock Grid.Row="2" Text="Current Functions" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="16" Background="Ivory" Padding="10"  ></TextBlock>

                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"></ColumnDefinition>
                            <ColumnDefinition Width="80"></ColumnDefinition>
                            <ColumnDefinition Width="58"></ColumnDefinition>
                            <ColumnDefinition Width="42"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="Function Name" FontSize="9" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                        <TextBlock Grid.Column="1" Text="Function" FontSize="9" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                        <TextBlock Grid.Column="2" Text="Function Color" FontSize="9" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                        <TextBlock Grid.Column="3" Text="Visibility" FontSize="9" VerticalAlignment="Center" HorizontalAlignment="Center"></TextBlock>
                    </Grid>

                    <ListView Grid.Row="4" Grid.RowSpan="2"  ItemsSource="{Binding Path=CurrentGraphicalFunctions}" Background="OldLace" >
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <!-- maybe at a color selection in a later stage-->
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="30"></ColumnDefinition>
                                        <ColumnDefinition MinWidth="120"></ColumnDefinition>
                                        <ColumnDefinition MinWidth="50"></ColumnDefinition>
                                        <ColumnDefinition MinWidth="30"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Text="{Binding Path = CustomUserSetName}" FontSize="10" Grid.Column="0" Width="30"></TextBox>
                                    <TextBlock Text="{Binding Path = FunctionDisplayName}" FontSize="10" Grid.Column="1" TextAlignment="Center"   >

                                        <TextBlock.TextDecorations>
                                            <TextDecoration Location="Underline">
                                                <TextDecoration.Pen>
                                                    <Pen Brush="{Binding FunctionColor, Converter={StaticResource ColorToSolidBrushConverter}}"></Pen>
                                                </TextDecoration.Pen>
                                            </TextDecoration>
                                        </TextBlock.TextDecorations>
                                    </TextBlock>

                                    <Button Grid.Column="2"  HorizontalAlignment="Center" VerticalAlignment="Bottom"  MinWidth="50" MinHeight="15" MaxHeight="15"  
                            Background="{Binding FunctionColor, Converter={StaticResource ColorToSolidBrushConverter}}" Command="{Binding OpenColorPicker}" ></Button>
                                    <!--CommandParameter="ColorPickerXAxisColor"-->

                                    <CheckBox IsChecked="{Binding Path=FunctionVisibility}" Grid.Column="3" HorizontalAlignment="Right">
                                    </CheckBox>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Grid>
            </Grid>
        </TabItem>
        <TabItem Header="Import/Export">

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="19*"/>
                    <ColumnDefinition Width="276*"/>
                    <ColumnDefinition Width="296*"/>
                    <ColumnDefinition Width="295*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Button Grid.Column="0" Grid.ColumnSpan="2"  Content="Save Current Functions" Command="{Binding SaveFunctionsToFile}" Margin="20" ></Button>
                <Button Grid.Column="2" Content="Import Functions From File" Command="{Binding InportFunctionsFromFile}" Margin="20"></Button>
                <Button Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Content="Reset Axis and Grid Values" Command="{Binding RestoreDefaultValuesForAxisAndGridData}" Margin="20"></Button>
                <Button Grid.Row="2" Grid.Column="2" Content="Delete All Current Functions" Command="{Binding DeleteAllCurrentFunctions}" Margin="20"></Button>
            </Grid>




        </TabItem>
    </TabControl>
</Window>